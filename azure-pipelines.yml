trigger:
  - main

variables:

  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'a6e1a27a-7959-441f-8e43-1eeb8fbb5947'
  imageRepository: 'spots-userservice'
  containerRegistry: 'spotsregistry1.azurecr.io'
  dockerfilePath: '**/Dockerfile'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'spotsregistry11835b849-auth'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

name: spots-userservice - $(Date:yyyyMMdd)$(Rev:.rr)

stages:
  - stage: Build_Test
    jobs:
      - job:
        displayName: Build spots-userservice
        steps:
          - task: SonarQubePrepare@4
            inputs:
              SonarQube: 'SonarQube'
              scannerMode: 'Other'
              extraProperties: |
                sonar.projectName=spots-userservice
                sonar.projectKey=spots-userservice
          - powershell: |
              $params = "$env:SONARQUBE_SCANNER_PARAMS" -replace '"sonar.branch.name":"[\w/,-.]*"\,?'
              Write-Host "##vso[task.setvariable variable=SONARQUBE_SCANNER_PARAMS]$params"
          - task: Gradle@2
            inputs:
              gradleWrapperFile: 'gradlew'
              tasks: 'build'
              publishJUnitResults: true
              testResultsFiles: '**/TEST-*.xml'
              javaHomeOption: 'JDKVersion'
              jdkVersionOption: '1.11'
              jdkArchitectureOption: 'x64'
              sonarQubeRunAnalysis: true
              sqGradlePluginVersionChoice: 'build'
              spotBugsAnalysis: false
          - task: SonarQubePublish@4
            inputs:
              pollingTimeoutSec: '300'
  - stage: Create_Images
    jobs:
        - job:
          displayName: Create Gradle Image

          variables:
          - name: image
            value: imageNotSpecified 
          - name: tag
            value: tagNotSpecified 

          steps:
          - task: Gradle@2
            displayName: Build Docker image (Jib)
            inputs:
              gradleWrapperFile: 'gradlew'
              tasks: 'clean jibDockerBuild -x test'
              publishJUnitResults: false
              jdkVersionOption: '1.11'
          - task: PowerShell@2
            displayName: Retrieve Image Data
            inputs:
              targetType: 'inline'
              script: |
                $gradle = Get-Content .\build.gradle
                $image="spots-userservice"
                $tag="0.0.1-SNAPSHOT"
                Write-Host "##vso[task.setvariable variable=image]$image"
                Write-Host "##vso[task.setvariable variable=tag]$tag"
              showWarnings: true
              # workingDirectory: ${{ parameters.workingDirectory }}
          - task: Docker@2
            displayName: Push Docker image
            inputs:
              containerRegistry: 'spotsregistry1'
              repository: $(image)
              command: 'push'
              tags: |
                latest
          - upload: manifests
            artifact: manifests
  - stage: Deploy
    displayName: Deploy stage

    jobs:
    - deployment: Deploy
      displayName: Deploy
      pool:
        vmImage: $(vmImageName)
      environment: 'PaulEversspots.default'
      strategy:
        runOnce:
          deploy:
            steps:
            - task: KubernetesManifest@0
              displayName: Create imagePullSecret
              inputs:
                action: createSecret
                secretName: $(imagePullSecret)
                dockerRegistryEndpoint: $(dockerRegistryServiceConnection)

            - task: KubernetesManifest@0
              displayName: Deploy to Kubernetes cluster
              inputs:
                action: deploy
                manifests: |
                  $(Pipeline.Workspace)/manifests/deployment.yml
                  $(Pipeline.Workspace)/manifests/service.yml
                  $(Pipeline.Workspace)/manifests/scaling.yml
                imagePullSecrets: |
                  $(imagePullSecret)
                containers: |
                  $(containerRegistry)/$(imageRepository):latest